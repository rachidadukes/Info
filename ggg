using Spectre.Console;
using System;

public static class HealthReporter
{
    public static void Render(ApiHealthDiag diag)
    {
        Console.Clear();

        // Header
        AnsiConsole.MarkupLine("[bold yellow]API Health Diagnostic[/]");
        AnsiConsole.WriteLine();

        // Summary Table
        var table = new Table()
            .Border(TableBorder.Rounded)
            .BorderColor(Color.Grey)
            .AddColumn("Phase")
            .AddColumn("Status")
            .AddColumn("Details");

        table.AddRow("DNS", diag.DnsOk ? "[green]OK[/]" : "[red]FAIL[/]", diag.DnsOk ? "Resolved" : diag.PhaseFailed == "DNS" ? diag.Reason : "-");
        table.AddRow("TCP", diag.TcpOk ? "[green]OK[/]" : "[red]FAIL[/]", diag.TcpOk ? "Connected" : diag.PhaseFailed == "TCP" ? diag.Reason : "-");
        table.AddRow("TLS", diag.TlsOk ? "[green]OK[/]" : "[red]FAIL[/]", diag.TlsOk ? "Handshake OK" : diag.PhaseFailed == "TLS" ? diag.Reason : diag.TlsErrors?.ToString() ?? "-");
        table.AddRow("HTTP", diag.HttpOk ? "[green]OK[/]" : "[red]FAIL[/]", diag.StatusCode.HasValue ? $"{(int)diag.StatusCode} {diag.Reason}" : diag.PhaseFailed == "HTTP" ? diag.Reason : "-");

        AnsiConsole.Write(table);

        // Optional: Display cert summary
        if (!string.IsNullOrWhiteSpace(diag.CertSummary))
        {
            AnsiConsole.WriteLine();
            AnsiConsole.MarkupLine("[bold grey]Certificate Info[/]");
            AnsiConsole.Write(new Panel(diag.CertSummary).BorderColor(Color.Grey));
        }

        // Optional: Response body preview
        if (!string.IsNullOrWhiteSpace(diag.ResponseSample))
        {
            AnsiConsole.WriteLine();
            AnsiConsole.MarkupLine("[bold grey]Response Sample[/]");
            AnsiConsole.Write(new Panel(diag.ResponseSample.Trim()).BorderColor(Color.Grey));
        }

        AnsiConsole.WriteLine();
        AnsiConsole.MarkupLine($"Elapsed: [yellow]{diag.Elapsed.TotalMilliseconds:N0} ms[/]");
    }
}
