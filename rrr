string endpointUrl = ConfigurationManager.AppSettings["MessageConverterURL"];
string response = string.Empty;

try
{
    Console.WriteLine($"Endpoint URL: {endpointUrl}");

    ServicePointManager.Expect100Continue = true;
    ServicePointManager.CheckCertificateRevocationList = true;
    ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

    var handler = new HttpClientHandler
    {
        // Non-production only: ignore SSL cert errors
        ServerCertificateCustomValidationCallback = (msg, cert, chain, errors) => true
    };

    using (var client = new HttpClient(handler))
    {
        client.BaseAddress = new Uri(endpointUrl);
        client.Timeout = TimeSpan.FromSeconds(90);

        var content = new StringContent(xml, Encoding.UTF8, "application/xml");
        Console.WriteLine($"POST {client.BaseAddress}");

        var resp = await client.PostAsync("", content).ConfigureAwait(false);
        response = await resp.Content.ReadAsStringAsync().ConfigureAwait(false);

        if (!resp.IsSuccessStatusCode)
            throw new HttpRequestException($"HTTP {(int)resp.StatusCode}: {resp.ReasonPhrase}\n{response}");
    }
}
catch (Exception ex)
{
    Console.WriteLine($"Error: {ex.Message}");
}
