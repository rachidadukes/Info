using System.Xml;
using Spectre.Console;

private static string BeautifyXml(string xml)
{
    try
    {
        var doc = new XmlDocument();
        doc.LoadXml(xml);

        var sb = new StringBuilder();
        var settings = new XmlWriterSettings
        {
            Indent = true,
            IndentChars = "  ",
            NewLineChars = "\n",
            NewLineHandling = NewLineHandling.Replace,
            OmitXmlDeclaration = false
        };

        using (var writer = XmlWriter.Create(sb, settings))
        {
            doc.Save(writer);
        }

        return sb.ToString();
    }
    catch
    {
        // If it's not valid XML, just return the raw string
        return xml;
    }
}

private static async Task CallServiceWithNoCert()
{
    var request = RequestBuilder.BuildXmlRequest();
    var objNewAPI = new ApiXmlClientNoCert();

    string response;
    try
    {
        response = await objNewAPI.GetResponseFromNewAPI(request);
    }
    catch (Exception ex)
    {
        AnsiConsole.MarkupLine($"[red bold]Request failed:[/] [white]{Markup.Escape(ex.Message)}[/]");
        return;
    }

    // Beautify if XML
    var prettyResponse = BeautifyXml(response);

    // Simple error detection
    bool looksError =
        !string.IsNullOrEmpty(response) &&
        (response.IndexOf("error", StringComparison.OrdinalIgnoreCase) >= 0 ||
         response.IndexOf("fault", StringComparison.OrdinalIgnoreCase) >= 0 ||
         response.IndexOf("exception", StringComparison.OrdinalIgnoreCase) >= 0);

    // Color-coded output
    if (looksError)
        AnsiConsole.MarkupLine($"[red bold]Response:[/]\n[white]{Markup.Escape(prettyResponse)}[/]");
    else
        AnsiConsole.MarkupLine($"[green bold]Response:[/]\n[white]{Markup.Escape(prettyResponse)}[/]");
}
