public static async Task RetrieveMembersProfile(Member selectedAccessNumByUser, string envir)
{
    ResultWrapper<MemberProfileRespDTO>? memberProfile;
    string? apiUrl;

    try
    {
        apiUrl = FindUrl(envir);
        string accessNumber = selectedAccessNumByUser.CustPermId;

        var memberProfileRepository = new MemberProfileRepository();
        memberProfile = await memberProfileRepository.GetMemberProfileAsync(envir, apiUrl, accessNumber);

        if (memberProfile?.Data != null && memberProfile.IsSuccess)
        {
            AnsiConsole.Write(new Rule("[green]Member Profile data retrieved successfully.[/]"));

            // ✅ SUMMARY LOGGING BLOCK
            // what the user saw (prompt items)
            var promptItems = new List<string>
            {
                $"Profile for {selectedAccessNumByUser.FullName} ({selectedAccessNumByUser.CustPermId})"
            };

            // what the user selected
            var selectionText = $"{selectedAccessNumByUser.FullName} ({selectedAccessNumByUser.CustPermId})";

            // system responses (messages you want to keep)
            var systemMessages = new[]
            {
                "Member profile retrieved successfully",
                $"Accounts found: {memberProfile.Data.ProfileAccts?.Count ?? 0}"
            };

            AppLogger.Summary.Add(
                promptItems: promptItems,
                userSelection: selectionText,
                systemResponses: systemMessages
            );
            // ✅ END SUMMARY LOGGING BLOCK

            RetrieveAccounts(memberProfile, envir, accessNumber);
        }
        else
        {
            Console.WriteLine($"Failed to retrieve member data: {memberProfile?.ErrorMessage}");

            // log failure too
            AppLogger.Summary.Add(
                promptItems: new List<string> { $"Access Number {selectedAccessNumByUser.CustPermId}" },
                userSelection: selectedAccessNumByUser.FullName ?? "(unknown)",
                systemResponses: new[] { $"Failed: {memberProfile?.ErrorMessage}" }
            );
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine("Error retrieving data: " + ex.Message);

        // log exception too
        AppLogger.Summary.Add(
            promptItems: new List<string> { $"Access Number {selectedAccessNumByUser.CustPermId}" },
            userSelection: selectedAccessNumByUser.FullName ?? "(unknown)",
            systemResponses: new[] { $"Exception: {ex.Message}" }
        );
    }
}
