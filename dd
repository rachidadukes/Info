public static class SearchMembers
{
    public static async Task SearchMembersByAccessNumber(AccessAcctNumbersModel selectedAccessNumber)
    {
        ResultWrapper<MemberSearchRespDTO>? response;
        string apiUrl;
        string envir;
        string AccessNumber;
        string SoapXMLRequest = "";
        string originalXMLResponse = "";
        Member selectedAccessNumByUser;
        List<Member> membersFound;

        try
        {
            envir = selectedAccessNumber.Environment;
            AccessNumber = selectedAccessNumber.AccessNumber;
            apiUrl = FindUrl(envir);

            // load settings here (instead of Program.cs)
            var settings = ConfigHelper.LoadAppSettings();

            MemberSearchRepository memberSearchRepository = new MemberSearchRepository();
            SoapXMLRequest = await GenerateByAccessRequest.GenerateSoapXMLrequest(envir, AccessNumber);

            // route request using helper
            originalXMLResponse = await RoutingHelper.RouteRequestAsync(
                SoapXMLRequest,
                apiUrl,
                settings
            );

            response = await memberSearchRepository.GetMembersByAccessNumber(SoapXMLRequest, apiUrl);

            if (response?.Data != null && response.IsSuccess)
            {
                AnsiConsole.WriteLine();
                AnsiConsole.Write(new Rule("[green]Members data retrieved successfully[/]"));

                membersFound = response.Data.Members;

                selectedAccessNumByUser = await SearchMembersListByAccessNumber(membersFound);

                Console.WriteLine();
                AnsiConsole.Write(new Rule($"[red]You selected[/] - env: {envir} | Name: {selectedAccessNumByUser.FullName} " +
                                           $"| Access Number: {selectedAccessNumByUser.CustPermId}"));
            }
            else
            {
                Console.WriteLine($"Failed to retrieve member data: {response?.ErrorMessage}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error retrieving data: {ex.Message}");
        }
    }
}
