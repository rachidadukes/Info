samples

private async Task<string> GetTranCodes(DbContextSQLite dbContext, List<LogDetailsModel> allLogs)
{
    try
    {
        // 1️⃣ Group in memory and get unique TranCodes
        var uniqueItems = allLogs
            .Where(s => !string.IsNullOrEmpty(s.TranCode))
            .GroupBy(s => new { s.TranCode, s.Environment })
            .Select(g => g.First())
            .ToList();

        var message = $"{uniqueItems.Count} Tran Codes found";

        // 2️⃣ Map once to entity model
        var codes = uniqueItems.Select(log => new TranCodesModel
        {
            Environment = log.Environment,
            TranCode    = log.TranCode
        }).ToList();

        // 3️⃣ Bulk replace using one transaction
        using var tx = await dbContext.Database.BeginTransactionAsync();

        dbContext.ChangeTracker.AutoDetectChangesEnabled = false;
        try
        {
            // Clear table
            await dbContext.Database.ExecuteSqlRawAsync("DELETE FROM TranCodes");

            // Insert all rows at once
            await dbContext.Set<TranCodesModel>().AddRangeAsync(codes);
            await dbContext.SaveChangesAsync();

            // Commit transaction
            await tx.CommitAsync();
        }
        finally
        {
            dbContext.ChangeTracker.AutoDetectChangesEnabled = true;
        }

        return message;
    }
    catch (Exception ex)
    {
        Console.WriteLine($"❌ Error while saving TranCodes: {ex.Message}");
        if (ex.InnerException != null)
            Console.WriteLine($"Inner exception: {ex.InnerException.Message}");
        return "";
    }
}
