samples

try
{
    var endpointUrl = settings["MessageConverterURL"];
    if (string.IsNullOrWhiteSpace(endpointUrl))
        throw new InvalidOperationException("MessageConverterURL not configured.");

    // === Load client certificate ===
    var subjectName = settings["ClientCert:SubjectName"];
    var storeLoc = Enum.TryParse(settings["ClientCert:StoreLocation"], out StoreLocation sl) ? sl : StoreLocation.LocalMachine;
    var storeName = Enum.TryParse(settings["ClientCert:StoreName"], out StoreName sn) ? sn : StoreName.My;
    var cert = CertificateLoader.LoadFromStore(subjectName, storeLoc, storeName);

    // === Create handler with mTLS ===
    var handler = new SocketsHttpHandler
    {
        SslOptions = new SslClientAuthenticationOptions
        {
            EnabledSslProtocols = SslProtocols.Tls12,
            ClientCertificates = new X509CertificateCollection { cert }
        }
    };

    using var client = new HttpClient(handler)
    {
        Timeout = TimeSpan.FromSeconds(30)
    };

    using var content = new StringContent(xml, Encoding.UTF8, "application/xml");
    var resp = await client.PostAsync(endpointUrl, content);
    var body = await resp.Content.ReadAsStringAsync();

    if (!resp.IsSuccessStatusCode)
    {
        throw new HttpRequestException($"Error {(int)resp.StatusCode}: {body}");
    }

    Console.WriteLine("✅ Successfully called endpoint with certificate.");
}
catch (Exception ex)
{
    Console.WriteLine($"❌ Error: {ex.Message}");
}
