samples

using System;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using Microsoft.Extensions.Configuration;
using EncoreAuth.Extensions; // Make sure this matches your namespace

public static class CertificateLoader
{
    public static X509Certificate2? GetCertificate()
    {
        // Load configuration
        var configuration = new ConfigurationBuilder()
            .SetBasePath(AppContext.BaseDirectory)
            .AddJsonFile("appsettings.json", optional: false, reloadOnChange: true)
            .Build();

        // Read from appsettings.json
        var subject = configuration["HostSettings:ClientCert:SubjectName"];
        var storeLocStr = configuration["HostSettings:ClientCert:StoreLocation"];
        var storeNameStr = configuration["HostSettings:ClientCert:StoreName"];

        // Convert store location and name safely
        if (!Enum.TryParse(storeLocStr, true, out StoreLocation storeLoc))
            storeLoc = StoreLocation.LocalMachine;

        if (!Enum.TryParse(storeNameStr, true, out StoreName storeName))
            storeName = StoreName.My;

        // Open the certificate store
        using var store = new X509Store(storeName, storeLoc);
        store.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);

        // Find by subject name only (boss style)
        var cert = store.Certificates.FindValidCertificateBySubjectName(subject);

        // Optional console feedback for debugging
        if (cert == null)
        {
            Console.WriteLine($"⚠️  Certificate '{subject}' not found in {storeLoc}\\{storeName}");
        }
        else
        {
            Console.WriteLine($"✅ Loaded certificate: {cert.Subject} | HasPrivateKey={cert.HasPrivateKey}");
        }

        return cert;
    }
}
