samples

// 1) Try WITHOUT cert
var bodyNoCert = await CallAsync(endpointUrl, xml, cert: null);

// 2) Try WITH cert (if you still want to validate mTLS)
var bodyWithCert = await CallAsync(endpointUrl, xml, cert);

===============================
static HttpClient CreateClientWithOptionalCert(X509Certificate2? cert = null)
{
    var handler = new SocketsHttpHandler
    {
        SslOptions = new SslClientAuthenticationOptions
        {
            EnabledSslProtocols = SslProtocols.Tls12 | SslProtocols.Tls13,
            // if your CRL/OCSP isnâ€™t reachable in dev, keep this off for now:
            CertificateRevocationCheckMode = X509RevocationMode.NoCheck
        }
    };

    if (cert != null)
    {
        handler.SslOptions.ClientCertificates = new X509CertificateCollection { cert };
    }

    return new HttpClient(handler)
    {
        Timeout = TimeSpan.FromSeconds(30)
    };
}

async Task<string> CallAsync(string url, string xml, X509Certificate2? cert)
{
    using var client = CreateClientWithOptionalCert(cert);
    using var content = new StringContent(xml, Encoding.UTF8, "application/xml");
    var resp = await client.PostAsync(url, content);
    var body = await resp.Content.ReadAsStringAsync();
    Console.WriteLine($"Status: {(int)resp.StatusCode} {resp.StatusCode}");
    return body;
}
