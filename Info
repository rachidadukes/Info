using Microsoft.Data.Sqlite;
using MyApp.ApplicationLayer.Interfaces;
using MyApp.Domain;

using System.Text.Json;

namespace MyApp.Infrastructure.Services
{


    public class SampleDataService : ISampleDataService
    {
        public async Task<List<AccessNumsSample>> GetAllAccessNumbsAsync()
        {
            try
            {
               var accessNumbers = new List<AccessNumsSample>();
              
                var dbPath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "SampleData", "SqliteAccounts.db");
                var connectionString = $"Data Source={dbPath};";

                using var connection = new SqliteConnection(connectionString);
                await connection.OpenAsync();

                // Example: read table
                var command = connection.CreateCommand();
                command.CommandText = "SELECT * FROM AccessNumbers";

                using var reader = await command.ExecuteReaderAsync();

                while (await reader.ReadAsync())
                {
                    accessNumbers.Add(new AccessNumsSample
                    {
                        Id = reader.GetInt32(0),
                        Environment = reader.IsDBNull(1) ? null : reader.GetString(1),
                        AccessNumber =reader.IsDBNull(2) ? null : reader.GetString(2)
                       
                    });
                }

            

                return accessNumbers;
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error fetching data: " + ex.Message);
                return new List<AccessNumsSample>();
            }
        }

        public async Task<List<AccountsSample>> GetAllAccountsNumbsAsync()
        {
            try
            {
                var accounts = new List<AccountsSample>();
                var dbPath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "SampleData", "SqliteAccounts.db");
                var connectionString = $"Data Source={dbPath};";

                using var connection = new SqliteConnection(connectionString);
                await connection.OpenAsync();

                // Example: read table
                var command = connection.CreateCommand();
                command.CommandText = "SELECT * FROM Accounts";

                using var reader = await command.ExecuteReaderAsync();

                while (await reader.ReadAsync())
                {
                    accounts.Add(new AccountsSample
                    {
                        Id = reader.GetInt32(0),
                        Environment = reader.IsDBNull(1) ? null : reader.GetString(1),
                        AccountNumber = reader.IsDBNull(2) ? null : reader.GetString(2),
                        AccountType = reader.IsDBNull(3) ? null : reader.GetString(3)
                    });
                }

                return accounts;
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error fetching data: " + ex.Message);
                return new List<AccountsSample>();
            }
        }




        public async Task<List<SSN_Sample>> GetAllSSNsAsync()
        {
            try
            {


                var ssnList = new List<SSN_Sample>();

                var dbPath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "SampleData", "SqliteAccounts.db");
                var connectionString = $"Data Source={dbPath};";

                using var connection = new SqliteConnection(connectionString);
                await connection.OpenAsync();

                // Example: read table
                var command = connection.CreateCommand();
                command.CommandText = "SELECT * FROM SSNlist";
                f
                using var reader = await command.ExecuteReaderAsync();

                while (await reader.ReadAsync())
                {
                    ssnList.Add(new SSN_Sample
                    {
                        Id = reader.GetInt32(0),
                        Environment = reader.IsDBNull(1) ? null : reader.GetString(1),
                        SSN = reader.IsDBNull(2) ? null : reader.GetString(2),

                    });
                }



                return ssnList;
               
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error fetching data: " + ex.Message);
                return new List<SSN_Sample>();
            }
        }



        public async Task<List<LastNameSamples>> GetAllLastNamesAsync()
        {
            try
            {

                var lastNameList = new List<LastNameSamples>();

                var dbPath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "SampleData", "SqliteAccounts.db");
                var connectionString = $"Data Source={dbPath};";

                using var connection = new SqliteConnection(connectionString);
                await connection.OpenAsync();

                // Example: read table
                var command = connection.CreateCommand();
                command.CommandText = "SELECT * FROM MemberLastName";

                using var reader = await command.ExecuteReaderAsync();

                while (await reader.ReadAsync())
                {
                    lastNameList.Add(new LastNameSamples
                    {
                        Id = reader.GetInt32(0),
                        Environment = reader.IsDBNull(1) ? null : reader.GetString(1),
                        LastName = reader.IsDBNull(2) ? null : reader.GetString(2),

                    });
                }



                return lastNameList;
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error fetching data: " + ex.Message);
                return new List<LastNameSamples>();
            }
        }

    }
}
