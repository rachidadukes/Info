<TextBlock Text="{Binding ProgressValue, StringFormat={}{0}%}"
           Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}"
           Margin="5 0 0 10" />


========================
<ProgressBar Minimum="0" Maximum="100"
             Value="{Binding ProgressValue}"
             Height="20" Margin="0 0 0 10"
             Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}" />

============================
private async void LoadLogs_Click(object sender, RoutedEventArgs e)
{
    IsLoading = true;
    ProgressValue = 0;
    EncoreLogs.Clear();
    ItemCount = 0;

    var dbContext = OpenDatabase();
    if (dbContext == null)
    {
        MessageBox.Show("Database file not found.");
        IsLoading = false;
        return;
    }

    MaxItems = await dbContext.EncoreLog.CountAsync(); // total for progress bar

    var progress = new Progress<EncoreLogModel>(log =>
    {
        EncoreLogs.Add(log);
        ItemCount = EncoreLogs.Count;
        ProgressValue = (int)((double)ItemCount / MaxItems * 100);
    });

    await LoadLogsAsync(dbContext, progress);
    IsLoading = false;
}

=================================

private int progressValue;
public int ProgressValue
{
    get => progressValue;
    set { progressValue = value; OnPropertyChanged(); }
}

private int maxItems;
public int MaxItems
{
    get => maxItems;
    set { maxItems = value; OnPropertyChanged(); }
}
