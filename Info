private async Task DatabaseConnectivity(DbContext context)
{
    try
    {
        // Ensure the connection is open and get database name
        var conn = context.Database.GetDbConnection();
        await conn.OpenAsync();
        Console.WriteLine($"Connected to database: {conn.Database}");

        // Check if the table 'EventDetails' exists
        var tableName = "EventDetails"; // Or the actual table name
        var command = conn.CreateCommand();
        command.CommandText = @$"
            SELECT COUNT(*) 
            FROM INFORMATION_SCHEMA.TABLES 
            WHERE TABLE_NAME = '{tableName}'";

        var result = (int)(await command.ExecuteScalarAsync());
        if (result == 0)
        {
            Console.WriteLine($"Table '{tableName}' does not exist.");
            return;
        }

        // Test query
        var testRecords = await context.Set<EventDetailsModel>()
                                       .Take(2)
                                       .ToListAsync();

        if (testRecords.Any())
        {
            Console.WriteLine("Successfully connected and table contains data.");
        }
        else
        {
            Console.WriteLine("Connected, but table is empty.");
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Unexpected Error: {ex.Message}");
    }
}
