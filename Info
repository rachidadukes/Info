private async Task FilterLogs()
{
    Mouse.OverrideCursor = Cursors.Wait;
    try
    {
        var filteredLogs = allLogs;

        if (!string.IsNullOrWhiteSpace(txtAccessNumber.Text))
        {
            filteredLogs = filteredLogs
                .Where(log => log.FullMessage?.IndexOf(txtAccessNumber.Text, StringComparison.OrdinalIgnoreCase) >= 0)
                .ToList();
        }

        if (!string.IsNullOrWhiteSpace(txtAccountNumber.Text))
        {
            filteredLogs = filteredLogs
                .Where(log => log.FullMessage?.IndexOf(txtAccountNumber.Text, StringComparison.OrdinalIgnoreCase) >= 0)
                .ToList();
        }

        if (!string.IsNullOrWhiteSpace(selectedUserID))
        {
            filteredLogs = filteredLogs
                .Where(log => log.UserID == selectedUserID)
                .ToList();
        }

        if (!string.IsNullOrWhiteSpace(selectedType))
        {
            filteredLogs = filteredLogs
                .Where(log => log.FullMessage?.IndexOf(selectedType, StringComparison.OrdinalIgnoreCase) >= 0)
                .ToList();
        }

        Application.Current.Dispatcher.Invoke(() =>
        {
            LogsListView.ItemsSource = filteredLogs;
            lblLogsCount.Content = $"{filteredLogs.Count} logs";
        });
    }
    catch (Exception ex)
    {
        MessageBox.Show($"Error filtering logs: {ex.Message}");
    }
    finally
    {
        Mouse.OverrideCursor = null;
    }
}
