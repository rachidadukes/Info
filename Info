foreach (var raw in rawEventDescriptions)
{
    // Remove lines that start with "Send to Host" or "Receive from Host"
    var cleanedMessage = string.Join(
        Environment.NewLine,
        raw.FullMessage
            .Split(new[] { Environment.NewLine }, StringSplitOptions.None)
            .Where(line => !line.StartsWith("Send to Host") && !line.StartsWith("Receive from Host"))
    );

    // Proceed with splitting by "<?xml"
    parts = cleanedMessage.Split(new string[] { "<?xml" }, StringSplitOptions.RemoveEmptyEntries);

    if (parts.Length >= 2)
    {
        request = "<?xml" + parts[0];
        response = "<?xml" + parts[1];

        item = new LogRequestResponse();
        item.FullMessage = raw.FullMessage;
        item.EventID = raw.EventID;
        item.Request = request;
        item.Response = response;

        requestResponseList.Add(item);
    }
    else
    {
        request = response = string.Empty;
    }

    requestIndex = raw.FullMessage.IndexOf("Request:");
    responseIndex = raw.FullMessage.IndexOf("Response:");
}
